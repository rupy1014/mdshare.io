"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/mdshare-client.ts":
/*!***********************************!*\
  !*** ./src/lib/mdshare-client.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDShareClient: () => (/* binding */ MDShareClient),\n/* harmony export */   mdshareClient: () => (/* binding */ mdshareClient)\n/* harmony export */ });\n// import { promises as fs } from 'fs'\n// import path from 'path'\nclass MDShareClient {\n    // 프로젝트 로드\n    async loadProject(projectPath) {\n        try {\n            // 브라우저 환경에서는 Mock 프로젝트 정보 반환\n            this.currentProject = {\n                id: 'mock-project',\n                name: 'MDShare Web Demo',\n                description: 'MDShare 웹 데모 프로젝트',\n                path: projectPath,\n                config: {\n                    project: {\n                        name: 'MDShare Web Demo',\n                        version: '1.0.0',\n                        description: 'MDShare 웹 데모 프로젝트',\n                        author: 'MDShare Team',\n                        license: 'MIT',\n                        language: 'ko',\n                        createdAt: new Date().toISOString(),\n                        updatedAt: new Date().toISOString(),\n                        type: 'documentation',\n                        criticality: 'medium'\n                    },\n                    settings: {\n                        theme: 'default',\n                        navigation: 'sidebar',\n                        searchEnabled: true,\n                        aiFeaturesEnabled: true,\n                        autoIndexingEnabled: true,\n                        chatbotEnabled: true,\n                        allowDownload: true,\n                        allowComments: false\n                    },\n                    ai: {\n                        autoTagging: true,\n                        autoCategorization: true,\n                        relationshipAnalysis: true,\n                        contentSuggestions: true,\n                        embeddingModel: 'text-embedding-3-small',\n                        chatModel: 'gpt-4o-mini'\n                    },\n                    access: {\n                        visibility: 'private',\n                        inviteCode: undefined,\n                        allowedDomains: [],\n                        passwordProtected: false\n                    },\n                    deployment: {\n                        method: 'manual',\n                        customDomain: undefined,\n                        autoDeploy: false\n                    }\n                },\n                documents: this.getMockDocuments(),\n                statistics: {\n                    documentCount: 3,\n                    totalWords: 2600,\n                    categories: [\n                        '개요',\n                        'API',\n                        '가이드'\n                    ],\n                    tags: [\n                        '개요',\n                        '프로젝트',\n                        'API',\n                        '문서',\n                        '설치',\n                        '가이드'\n                    ],\n                    authors: [\n                        'MDShare Team'\n                    ],\n                    lastIndexed: new Date().toISOString()\n                }\n            };\n            return this.currentProject;\n        } catch (error) {\n            console.error('프로젝트 로드 실패:', error);\n            throw error;\n        }\n    }\n    // 현재 프로젝트 정보 가져오기\n    getCurrentProject() {\n        return this.currentProject;\n    }\n    // 문서 목록 가져오기\n    async getDocuments() {\n        if (!this.currentProject) {\n            throw new Error('프로젝트가 로드되지 않았습니다.');\n        }\n        try {\n            // 브라우저 환경에서는 Mock 데이터 반환\n            return this.getMockDocuments();\n        } catch (error) {\n            console.error('문서 목록 가져오기 실패:', error);\n            return [];\n        }\n    }\n    // 문서 읽기\n    async readDocument(documentPath) {\n        if (!this.currentProject) {\n            throw new Error('프로젝트가 로드되지 않았습니다.');\n        }\n        try {\n            // 브라우저 환경에서는 Mock 문서 내용 반환\n            const mockContent = this.getMockDocumentContent(documentPath);\n            return mockContent;\n        } catch (error) {\n            console.error('문서 읽기 실패:', error);\n            throw error;\n        }\n    }\n    // 문서 저장\n    async saveDocument(documentPath, content) {\n        if (!this.currentProject) {\n            throw new Error('프로젝트가 로드되지 않았습니다.');\n        }\n        try {\n            await this.engine.saveDocument(documentPath, content);\n        } catch (error) {\n            console.error('문서 저장 실패:', error);\n            throw error;\n        }\n    }\n    // 샘플 프로젝트 로드 (개발용)\n    async loadSampleProject() {\n        // 브라우저 환경에서는 파일 시스템 접근이 불가능하므로 Mock 데이터 반환\n        throw new Error('브라우저 환경에서는 파일 시스템 접근이 불가능합니다.');\n    }\n    // Mock 데이터 생성 (개발용)\n    getMockDocuments() {\n        return [\n            {\n                id: '1',\n                title: '프로젝트 개요',\n                path: '/docs/overview.md',\n                description: 'MDShare 프로젝트의 전체적인 개요와 목표',\n                lastModified: new Date('2023-10-27'),\n                tags: [\n                    '개요',\n                    '프로젝트'\n                ],\n                metadata: {\n                    wordCount: 1200,\n                    readingTime: 5,\n                    author: 'MDShare Team'\n                }\n            },\n            {\n                id: '2',\n                title: 'API 문서',\n                path: '/docs/api.md',\n                description: 'MDShare API 사용법과 엔드포인트 설명',\n                lastModified: new Date('2023-10-26'),\n                tags: [\n                    'API',\n                    '문서'\n                ],\n                metadata: {\n                    wordCount: 800,\n                    readingTime: 4,\n                    author: 'MDShare Team'\n                }\n            },\n            {\n                id: '3',\n                title: '설치 가이드',\n                path: '/docs/installation.md',\n                description: 'MDShare 설치 및 설정 방법',\n                lastModified: new Date('2023-10-25'),\n                tags: [\n                    '설치',\n                    '가이드'\n                ],\n                metadata: {\n                    wordCount: 600,\n                    readingTime: 3,\n                    author: 'MDShare Team'\n                }\n            }\n        ];\n    }\n    constructor(){\n        this.currentProject = null;\n    // 브라우저 환경에서는 파일 시스템 접근이 불가능하므로 engine을 초기화하지 않음\n    }\n}\n// 싱글톤 인스턴스\nconst mdshareClient = new MDShareClient();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/mdshare-client.ts\n"));

/***/ })

});